{"ast":null,"code":"var _jsxFileName = \"G:\\\\Programs\\\\xampp\\\\htdocs\\\\kayleagray_react\\\\src\\\\pages\\\\components\\\\FormComponent\\\\FieldComponent\\\\FieldComponent.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FieldComponent(props) {\n  let element = null;\n\n  // const fieldConfig = props.fieldConfig;\n  // let element = null;\n  // let classes = ['field'];\n  // if (fieldConfig.touched && !fieldConfig.valid) {\n  //     classes.push('invalid');\n  // }\n  // switch (fieldConfig.type) {\n  //     case 'input':\n  //         element = (<input type={fieldConfig.config.type}\n  //             name={fieldConfig.id}\n  //             value={fieldConfig.value}\n  //             className={classes.join(' ')}\n  //             placeholder={fieldConfig.placeholder}\n  //             required={fieldConfig.validation.required}\n  //             onBlur={props.focused}\n  //             minLength={fieldConfig.validation.minLength}\n  //             onChange={props.changed}\n  //             maxLength={fieldConfig.validation.maxLength}\n  //         />);\n  //         break;\n  //     case 'textarea':\n  //         element = <textarea\n  //             value={fieldConfig.value}\n  //             className={classes.join(' ')}\n  //             placeholder={fieldConfig.placeholder}\n  //             required={fieldConfig.validation.required}\n  //             onBlur={props.focused}\n  //             minLength={fieldConfig.validation.minLength}\n  //             onChange={props.changed}\n  //             maxLength={fieldConfig.validation.maxLength}\n  //         />;\n  //         break;\n  //     case 'select':\n  //         element = (\n  //             <select\n  //                 value={fieldConfig.value}\n  //                 className={classes.join(' ')}\n  //                 required={fieldConfig.validation.required}\n  //                 onBlur={props.blured}\n  //                 onChange={props.changed}>\n  //                 <option>{fieldConfig.placeholder}</option>\n  //                 {fieldConfig.options.map(option => (\n  //                     <option key={option.value} value={option.value}>\n  //                         {option.displayValue}\n  //                     </option>\n  //                 ))}\n  //             </select>\n  //         );\n  //         break;\n  //         default: break;\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field-wrapper\",\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_c = FieldComponent;\nexport default FieldComponent;\nvar _c;\n$RefreshReg$(_c, \"FieldComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FieldComponent","props","element","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Programs/xampp/htdocs/kayleagray_react/src/pages/components/FormComponent/FieldComponent/FieldComponent.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction FieldComponent(props) {\r\n    let element = null;\r\n\r\n    // const fieldConfig = props.fieldConfig;\r\n    // let element = null;\r\n    // let classes = ['field'];\r\n    // if (fieldConfig.touched && !fieldConfig.valid) {\r\n    //     classes.push('invalid');\r\n    // }\r\n    // switch (fieldConfig.type) {\r\n    //     case 'input':\r\n    //         element = (<input type={fieldConfig.config.type}\r\n    //             name={fieldConfig.id}\r\n    //             value={fieldConfig.value}\r\n    //             className={classes.join(' ')}\r\n    //             placeholder={fieldConfig.placeholder}\r\n    //             required={fieldConfig.validation.required}\r\n    //             onBlur={props.focused}\r\n    //             minLength={fieldConfig.validation.minLength}\r\n    //             onChange={props.changed}\r\n    //             maxLength={fieldConfig.validation.maxLength}\r\n    //         />);\r\n    //         break;\r\n    //     case 'textarea':\r\n    //         element = <textarea\r\n    //             value={fieldConfig.value}\r\n    //             className={classes.join(' ')}\r\n    //             placeholder={fieldConfig.placeholder}\r\n    //             required={fieldConfig.validation.required}\r\n    //             onBlur={props.focused}\r\n    //             minLength={fieldConfig.validation.minLength}\r\n    //             onChange={props.changed}\r\n    //             maxLength={fieldConfig.validation.maxLength}\r\n    //         />;\r\n    //         break;\r\n    //     case 'select':\r\n    //         element = (\r\n    //             <select\r\n    //                 value={fieldConfig.value}\r\n    //                 className={classes.join(' ')}\r\n    //                 required={fieldConfig.validation.required}\r\n    //                 onBlur={props.blured}\r\n    //                 onChange={props.changed}>\r\n    //                 <option>{fieldConfig.placeholder}</option>\r\n    //                 {fieldConfig.options.map(option => (\r\n    //                     <option key={option.value} value={option.value}>\r\n    //                         {option.displayValue}\r\n    //                     </option>\r\n    //                 ))}\r\n    //             </select>\r\n    //         );\r\n    //         break;\r\n    //         default: break;\r\n    // }\r\n    return (\r\n        <div className=\"field-wrapper\">\r\n            {element}\r\n        </div>\r\n    )\r\n}\r\nexport default FieldComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC3B,IAAIC,OAAO,GAAG,IAAI;;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACIH,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,EACzBF;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACC,EAAA,GA3DQT,cAAc;AA4DvB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}